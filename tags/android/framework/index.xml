<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Android/Framework on Milky Way</title>
    <link>https://usagisang.github.io/tags/android/framework/</link>
    <description>Recent content in Android/Framework on Milky Way</description>
    <image>
      <title>Milky Way</title>
      <url>https://usagisang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://usagisang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 04 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://usagisang.github.io/tags/android/framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用Android的以太网共享功能模拟LAN网口</title>
      <link>https://usagisang.github.io/posts/%E5%88%A9%E7%94%A8android%E7%9A%84%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%85%B1%E4%BA%AB%E5%8A%9F%E8%83%BD%E6%A8%A1%E6%8B%9Flan%E7%BD%91%E5%8F%A3/</link>
      <pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/%E5%88%A9%E7%94%A8android%E7%9A%84%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%85%B1%E4%BA%AB%E5%8A%9F%E8%83%BD%E6%A8%A1%E6%8B%9Flan%E7%BD%91%E5%8F%A3/</guid>
      <description>&lt;p&gt;本文的目标是在一个安装了 Android 系统的设备上模拟软路由。这个设备拥有三个网口，最终的目标是希望模拟出一个 WAN 网口和两个 LAN 网口。目标系统为 Android 14。&lt;/p&gt;
&lt;p&gt;Android 14 提供了以太网共享网络的功能，借助这个功能，我们可以将一个网口模拟成 LAN 口，但可惜的是，这个功能只对一个网口生效。我们先简要分析一下其实现原理，然后再给出在有三个网口的机器上模拟出两个 LAN 接口的技术解决方案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Framework与JNI</title>
      <link>https://usagisang.github.io/posts/android-framework%E4%B8%8Ejni/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/android-framework%E4%B8%8Ejni/</guid>
      <description>&lt;p&gt;本文以 android-12.0.0_r34 的代码进行分析。&lt;/p&gt;
&lt;h2 id=&#34;framework中的jni&#34;&gt;framework中的JNI&lt;/h2&gt;
&lt;p&gt;通常来说，Android framework 中使用到的 native 函数都是动态注册的，而且注册过程有固定的套路。我们以&lt;code&gt;Parcel&lt;/code&gt;类为例来解析套路。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android开机动画修改指南</title>
      <link>https://usagisang.github.io/posts/android%E5%BC%80%E6%9C%BA%E5%8A%A8%E7%94%BB%E4%BF%AE%E6%94%B9%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/android%E5%BC%80%E6%9C%BA%E5%8A%A8%E7%94%BB%E4%BF%AE%E6%94%B9%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文大部分内容来源于对 frameworks/base/cmds/bootanimation/FORMAT.md 的整合翻译。以下介绍的所有内容只适用于 AOSP ，厂商可针对 BootAnimation.cpp 进行魔改，请以具体代码为准。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;开机动画文件路径&#34;&gt;开机动画文件路径&lt;/h2&gt;
&lt;p&gt;系统按优先级顺序从以下路径选择归档为 zip 文件的开机动画，第一个路径的优先级最高，然后依次递减：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
