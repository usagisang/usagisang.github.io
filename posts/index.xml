<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Milky Way</title>
    <link>https://usagisang.github.io/posts/</link>
    <description>Recent content in Posts on Milky Way</description>
    <image>
      <title>Milky Way</title>
      <url>https://usagisang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://usagisang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.144.2</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 12 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://usagisang.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>删除排序链表中重复的结点</title>
      <link>https://usagisang.github.io/posts/%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9/</link>
      <pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9/</guid>
      <description>&lt;h2 id=&#34;link&#34;&gt;link&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/CyC2018/CS-Notes/blob/master/notes/18.2%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9.md&#34;&gt;CS-Note 18.2 删除链表中重复的结点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/remove-duplicates-from-sorted-list&#34;&gt;Leetcode 删除排序链表中的重复元素&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii&#34;&gt;Leetcode 删除排序链表中的重复元素 II&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;p&gt;在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据流中的中位数</title>
      <link>https://usagisang.github.io/posts/%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Sat, 25 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
      <description>&lt;h2 id=&#34;link&#34;&gt;link&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/CyC2018/CS-Notes/blob/master/notes/41.1%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.md&#34;&gt;CS-Note 41.1 数据流中的中位数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/find-median-from-data-stream/&#34;&gt;Leetcode 295. 数据流的中位数&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;p&gt;如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数的平均值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SELinux快速入门</title>
      <link>https://usagisang.github.io/posts/selinux%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 27 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/selinux%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文大量参考了 Gentoo Linux 文档中与 SELinux 相关的 &lt;a href=&#34;https://wiki.gentoo.org/wiki/SELinux&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;SELinux 安全子系统是对基于 UNIX 权限位的 Linux 常规访问控制的补充，不同于常规访问控制，SELinux 提供的访问控制更加安全但同时也更加难以维护。SELinux 灵活且复杂，但它的工作原理其实很简单，我们将逐步深入，介绍 SELinux 支持的各种功能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gcd的递归与非递归实现</title>
      <link>https://usagisang.github.io/posts/gcd%E7%9A%84%E9%80%92%E5%BD%92%E4%B8%8E%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/gcd%E7%9A%84%E9%80%92%E5%BD%92%E4%B8%8E%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;h2 id=&#34;欧几里得算法的自然语言描述&#34;&gt;欧几里得算法的自然语言描述&lt;/h2&gt;
&lt;p&gt;计算两个非负整数p和q的最大公约数：若 q 是0，则最大公约数为p。否则，将 p 除以 q 得到余数 r，p和q的最大公约数即为 q 和 r 的最大公约数。&lt;/p&gt;
&lt;h2 id=&#34;递归实现&#34;&gt;递归实现&lt;/h2&gt;
&lt;p&gt;根据自然语言描述实现递归的 gcd 算法是比较容易的：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Framework与JNI</title>
      <link>https://usagisang.github.io/posts/android-framework%E4%B8%8Ejni/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/android-framework%E4%B8%8Ejni/</guid>
      <description>&lt;p&gt;本文以 android-12.0.0_r34 的代码进行分析。&lt;/p&gt;
&lt;h2 id=&#34;framework中的jni&#34;&gt;framework中的JNI&lt;/h2&gt;
&lt;p&gt;通常来说，Android framework 中使用到的 native 函数都是动态注册的，而且注册过程有固定的套路。我们以&lt;code&gt;Parcel&lt;/code&gt;类为例来解析套路。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android上的设备管理</title>
      <link>https://usagisang.github.io/posts/android%E4%B8%8A%E7%9A%84%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/android%E4%B8%8A%E7%9A%84%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://source.android.com/docs/devices/admin&#34;&gt;https://source.android.com/docs/devices/admin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.android.com/work/guide&#34;&gt;https://developer.android.com/work/guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.google.com/android/work/play/emm-api/prov-devices&#34;&gt;https://developers.google.com/android/work/play/emm-api/prov-devices&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;本文提到的“设备管理”并不面向终端用户，而是一种支持企业管理、监控和保护所有用于工作的移动设备的实际需要而产生的一系列框架。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键术语&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Device Policy Controller：设备政策控制器，简称 DPC&lt;/li&gt;
&lt;li&gt;Device Owner：设备所有者，是 Android 设备管理框架运行的一种模式，有时简称为 DO&lt;/li&gt;
&lt;li&gt;Profile Owner：工作配置所有者，是 Android 设备管理框架运行的一种模式，有时简称为 PO&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设备管理方案&#34;&gt;设备管理方案&lt;/h2&gt;
&lt;p&gt;一套完整的设备管理方案通常包含了两个方面的支持。其一是安装在设备端的设备政策控制器（Device Policy Controller）应用，其二是云端的控制台。企业客户在设备上安装 DPC 应用并与云端关联注册后，可以通过云端将设备管理政策下发至 DPC 应用，DPC 应用最终执行之。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android开机动画修改指南</title>
      <link>https://usagisang.github.io/posts/android%E5%BC%80%E6%9C%BA%E5%8A%A8%E7%94%BB%E4%BF%AE%E6%94%B9%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/android%E5%BC%80%E6%9C%BA%E5%8A%A8%E7%94%BB%E4%BF%AE%E6%94%B9%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文内容的基本骨架来源于对 frameworks/base/cmds/bootanimation/FORMAT.md 的整合翻译。以下介绍的所有内容只适用于 AOSP ，厂商可针对 BootAnimation.cpp 进行魔改，请以具体代码为准。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;开机动画文件路径&#34;&gt;开机动画文件路径&lt;/h2&gt;
&lt;p&gt;系统按优先级顺序从以下路径选择归档为 zip 文件的开机动画，第一个路径的优先级最高，然后依次递减：&lt;/p&gt;</description>
    </item>
    <item>
      <title>存储技术常用术语简析</title>
      <link>https://usagisang.github.io/posts/%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD%E7%AE%80%E6%9E%90/</link>
      <pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD%E7%AE%80%E6%9E%90/</guid>
      <description>&lt;h2 id=&#34;什么是-memory&#34;&gt;什么是 Memory&lt;/h2&gt;
&lt;p&gt;在通俗意义上来，Memory 一般翻译为存储器，存储器用来指代那些能够帮助计算机存储信息的部件。由于目前还不存在速度快、数据断电不丢失同时单位容量价格又低的存储器技术，为了平衡 I/O 性能和价格，取舍之间，计算机通常会构建一个包含三层的存储器层次结构，即 CPU Cache、主存、外存（硬盘）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rodrigues’ Rotation Formula</title>
      <link>https://usagisang.github.io/posts/rodrigues-rotation-formula/</link>
      <pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/rodrigues-rotation-formula/</guid>
      <description>&lt;p&gt;关于三维空间中的旋转，我们以前提到过基于欧拉角的旋转表达矩阵，它们分别描述了围绕 x 轴、y 轴、z 轴旋转后坐标应当如何变化。事实上，我们可以更进一步，推导出一个通用的、围绕过原点的任意轴旋转的公式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何为Compose Image提供网络图片加载支持</title>
      <link>https://usagisang.github.io/posts/%E5%A6%82%E4%BD%95%E4%B8%BAcompose-image%E6%8F%90%E4%BE%9B%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sat, 12 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/%E5%A6%82%E4%BD%95%E4%B8%BAcompose-image%E6%8F%90%E4%BE%9B%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E6%94%AF%E6%8C%81/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文是源码分析类文章&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;如何为Compose Image提供网络图片加载支持？目前（Compose 1.0.5）最好的选择似乎是使用图片框架Coil，Coil对Jetpack Compose相关的支持文档&lt;a href=&#34;https://coil-kt.github.io/coil/compose/&#34;&gt;在这&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA</title>
      <link>https://usagisang.github.io/posts/rsa/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://usagisang.github.io/posts/rsa/</guid>
      <description>&lt;p&gt;不同于传统的对称加密算法体系，非对称公私钥密码系统中的加密密钥和解密密钥是相互分开的，加密密钥用于公开给别人加密，而只有持有解密密钥的人才能对信息进行解密。1976年诞生过不少非对称密码算法，但是 RSA 是其中最容易让人理解的。下文将尝试对 RSA 实现的具体流程进行解析。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
